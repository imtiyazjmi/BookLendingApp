name: Deploy to AWS Lambda via S3

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install Lambda Tools
        run: dotnet tool install -g Amazon.Lambda.Tools

      - name: Build and Package Lambda
        run: |
          cd src
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          LAMBDA_ZIP="lambda-function-$TIMESTAMP.zip"
          echo "LAMBDA_ZIP=$LAMBDA_ZIP" >> $GITHUB_ENV
          dotnet lambda package --configuration Release --framework net8.0 --output-package ../deployment/$LAMBDA_ZIP

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change to your region
      
      - name: Upload to S3
        run: aws s3 cp deployment/$LAMBDA_ZIP s3://lambda-deployment-565393029483-us-east-1/$LAMBDA_ZIP

      - name: Deploy Infrastructure
        run: |
          RDS_ENDPOINT=$(aws cloudformation describe-stacks \
            --stack-name BookLendingInfrastructure \
            --query 'Stacks[0].Outputs[?OutputKey==`RDSEndpoint`].OutputValue' \
            --output text 2>/dev/null || echo "")
          
          aws cloudformation deploy \
            --template-file deployment/minimal-infrastructure.yaml \
            --stack-name BookLendingInfrastructure \
            --parameter-overrides \
              S3Key=$LAMBDA_ZIP \
              PostgreSQLHost="$RDS_ENDPOINT" \
              PostgreSQLDatabase=postgres \
              PostgreSQLUsername=masteruser \
              PostgreSQLPassword=Password2123 \
              AWSLambdaRegion=us-east-1 \
            --capabilities CAPABILITY_IAM
            
      - name: Get Lambda Function Name and Deploy API Gateway
        run: |
          LAMBDA_FUNCTION_NAME=$(aws cloudformation describe-stacks \
            --stack-name BookLendingInfrastructure \
            --query 'Stacks[0].Outputs[?OutputKey==`LambdaFunctionName`].OutputValue' \
            --output text)
          
          echo "Lambda Function Name: $LAMBDA_FUNCTION_NAME"
          
          aws cloudformation deploy \
            --template-file deployment/api-gateway.yaml \
            --stack-name BookLendingApiGateway \
            --parameter-overrides LambdaFunctionName=$LAMBDA_FUNCTION_NAME \
            --capabilities CAPABILITY_IAM

      - name: Get API Gateway URL
        run: |
          API_URL=$(aws cloudformation describe-stacks \
            --stack-name BookLendingApiGateway \
            --query 'Stacks[0].Outputs[?OutputKey==`ApiGatewayUrl`].OutputValue' \
            --output text)
          echo "API Gateway URL: $API_URL"